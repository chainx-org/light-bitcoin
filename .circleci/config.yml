version: 2.1
jobs:
  build:
    docker:
      - image: ubuntu:18.04

    working_directory: ~/light-bitcoin-ci

    steps:
      - checkout

      - run:
          name: Setup build environment
          command: |
            apt update
            apt install -y curl wget build-essential zlib1g-dev python libcurl4-openssl-dev libelf-dev libdw-dev cmake binutils-dev libiberty-dev
            curl https://sh.rustup.rs -sSf | sh -s -- --no-modify-path --default-toolchain none -y;
            source $HOME/.cargo/env
          no_output_timeout: 1800s

      - run:
          name: Format
          command: |
            export PATH=~/.cargo/bin:$PATH
            rustup component add rustfmt
            cargo fmt -- --check

      - run:
          name: Lint
          command: |
            export PATH=~/.cargo/bin:$PATH
            rustup component add clippy
            cargo clippy -- -Dwarnings

      - run:
          name: Test
          command: |
            export PATH=~/.cargo/bin:$PATH
            export RUST_BACKTRACE=1

            # test std
            cargo test --all --exclude serialization_derive
            cd serialization_derive && cargo test --test raw && cd ..

            # test no_std
            cd primitives && cargo test --no-default-features && cd ..
            cd serialization && cargo test --no-default-features && cd ..
            cd crypto && cargo test --no-default-features && cd ..
            cd keys && cargo test --no-default-features && cd ..
            cd chain && cargo test --no-default-features && cd ..
            cd script && cargo test --no-default-features && cd ..
            cd merkle && cargo test --no-default-features && cd ..

      - run:
          name: Coverage
          command: |
            # install kcov
            wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz
            tar xzf master.tar.gz
            cd kcov-master
            mkdir build
            cd build
            cmake ..
            make
            make install DESTDIR=../../kcov-build
            cd ../..
            rm -rf kcov-master

            # generate and upload code coverage
            for file in target/debug/*-*; do
              [ -x "${file}" ] || continue
              mkdir -p "target/cov/$(basename $file)"
              ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"
            done
            bash <(curl -s https://codecov.io/bash)
            echo "Uploaded code coverage"

workflows:
  version: 2.1
  build:
    jobs:
      - build
